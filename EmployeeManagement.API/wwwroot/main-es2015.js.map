{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/employees/employees-create/employees-create.component.html","./src/app/employees/employees-create/employees-edit/employees-edit.component.html","./src/app/employees/employees-create/employees-list/employees-list.component.html","./src/app/home/home.component.html","./src/app/managers/managers-create/managers-create.component.html","./src/app/managers/managers-create/managers-list/managers-list.component.html","./src/app/nav/nav.component.html","./node_modules/tslib/tslib.es6.js","./src/app/_resolvers/employee-edit.resolver.ts","./src/app/_services/employee.service.ts","./src/app/_services/manager.service.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/employees/employees-create/employees-create.component.css","./src/app/employees/employees-create/employees-create.component.ts","./src/app/employees/employees-create/employees-edit/employees-edit.component.css","./src/app/employees/employees-create/employees-edit/employees-edit.component.ts","./src/app/employees/employees-create/employees-list/employees-list.component.css","./src/app/employees/employees-create/employees-list/employees-list.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/managers/managers-create/managers-create.component.css","./src/app/managers/managers-create/managers-create.component.ts","./src/app/managers/managers-create/managers-list/managers-list.component.css","./src/app/managers/managers-create/managers-list/managers-list.component.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.ts","./src/app/routes.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-nav></app-nav>\\n<div class=\\\"container mb-5\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","export default \"<form [formGroup]=\\\"createEmployeeForm\\\" (ngSubmit)=\\\"createEmployee()\\\" class=\\\"mt-3\\\">\\r\\n  <h2 class=\\\"text-center mb-3\\\">Employee Creation</h2>\\r\\n\\r\\n  <div class=\\\"col-md-4 col-md-offset-3 text-center container\\\">\\r\\n    <!-- FirstName -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        maxlength=\\\"15\\\"\\r\\n        pattern=\\\"[a-zA-Z]*\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid':\\r\\n          createEmployeeForm.get('firstName').errors &&\\r\\n          createEmployeeForm.get('firstName').touched\\r\\n        }\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"firstName\\\"\\r\\n        placeholder=\\\"FirstName...\\\"\\r\\n        autocomplete=\\\"firstName\\\"\\r\\n      />\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('firstName').touched &&\\r\\n          createEmployeeForm.get('firstName').hasError('required')\\r\\n          \\\">\\r\\n        Please provide a First Name\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('firstName').touched &&\\r\\n          createEmployeeForm.get('firstName').hasError('pattern')\\r\\n          \\\">\\r\\n        You must use alphabet characters only\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- LastName -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        maxlength=\\\"15\\\"\\r\\n        pattern=\\\"[a-zA-Z]*\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid':\\r\\n          createEmployeeForm.get('lastName').errors &&\\r\\n          createEmployeeForm.get('lastName').touched\\r\\n        }\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"lastName\\\"\\r\\n        placeholder=\\\"LastName...\\\"\\r\\n        autocomplete=\\\"lastName\\\"\\r\\n      />\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('lastName').touched &&\\r\\n          createEmployeeForm.get('lastName').hasError('required')\\r\\n          \\\">\\r\\n        Please provide a Last Name\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('lastName').touched &&\\r\\n          createEmployeeForm.get('lastName').hasError('pattern')\\r\\n          \\\">\\r\\n        You must use alphabet characters only\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- PID -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        maxlength=\\\"9\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid':\\r\\n          createEmployeeForm.get('personalIdentity').errors &&\\r\\n          createEmployeeForm.get('personalIdentity').touched\\r\\n        }\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"personalIdentity\\\"\\r\\n        placeholder=\\\"PersonalIdentity...\\\"\\r\\n        autocomplete=\\\"personalIdentity\\\"\\r\\n      />\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('personalIdentity').touched &&\\r\\n          createEmployeeForm.get('personalIdentity').hasError('required')\\r\\n          \\\">\\r\\n        Please provide a PersonalIdentity\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('personalIdentity').touched &&\\r\\n          createEmployeeForm.get('personalIdentity').hasError('minlength')\\r\\n          \\\">\\r\\n        ID must be 9 characters long\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('personalIdentity').touched &&\\r\\n          createEmployeeForm.get('personalIdentity').hasError('pattern')\\r\\n          \\\">\\r\\n        Please use numbers only\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- ManagerSelection -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <select\\r\\n      [ngClass]=\\\"{\\r\\n        'is-invalid':\\r\\n        createEmployeeForm.get('managerId').errors &&\\r\\n        createEmployeeForm.get('managerId').touched\\r\\n      }\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"managerId\\\"\\r\\n      autocomplete=\\\"managerId\\\"\\r\\n      >\\r\\n        <option *ngFor=\\\"let manager of managers\\\" value=\\\"{{ manager.id }}\\\">{{ manager.firstName }} {{ manager.lastName }}</option>\\r\\n      </select>\\r\\n      <div class=\\\"invalid-feedback text-left\\\"\\r\\n      *ngIf=\\\"\\r\\n          createEmployeeForm.get('managerId').touched &&\\r\\n          createEmployeeForm.get('managerId').hasError('required')\\r\\n          \\\">\\r\\n        Please provide a Manager for the Employee\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Buttons -->\\r\\n    <div class=\\\"form-group text-center\\\">\\r\\n      <button class=\\\"btn btn-outline-success mr-2\\\" type=\\\"submit\\\" [disabled]=\\\"!createEmployeeForm.valid\\\">Create</button>\\r\\n      <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<form [formGroup]=\\\"editEmployeeForm\\\" (ngSubmit)=\\\"updateEmployee()\\\" class=\\\"mt-3\\\">\\n  <h2 class=\\\"text-center mb-3\\\">Edit Employee {{ employee.id }}</h2>\\n\\n  <div class=\\\"col-md-4 col-md-offset-3 text-center container\\\">\\n    <!-- FirstName -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        maxlength=\\\"15\\\"\\n        pattern=\\\"[a-zA-Z]*\\\"\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n          editEmployeeForm.get('firstName').errors &&\\n          editEmployeeForm.get('firstName').touched\\n        }\\\"\\n        class=\\\"form-control\\\"\\n        formControlName=\\\"firstName\\\"\\n        placeholder=\\\"FirstName...\\\"\\n        autocomplete=\\\"firstName\\\"\\n      />\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('firstName').touched &&\\n          editEmployeeForm.get('firstName').hasError('required')\\n          \\\">\\n        Please provide a First Name\\n      </div>\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('firstName').touched &&\\n          editEmployeeForm.get('firstName').hasError('pattern')\\n          \\\">\\n        You must use alphabet characters only\\n      </div>\\n    </div>\\n    <!-- LastName -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        maxlength=\\\"15\\\"\\n        pattern=\\\"[a-zA-Z]*\\\"\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n          editEmployeeForm.get('lastName').errors &&\\n          editEmployeeForm.get('lastName').touched\\n        }\\\"\\n        class=\\\"form-control\\\"\\n        formControlName=\\\"lastName\\\"\\n        placeholder=\\\"LastName...\\\"\\n        autocomplete=\\\"lastName\\\"\\n      />\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('lastName').touched &&\\n          editEmployeeForm.get('lastName').hasError('required')\\n          \\\">\\n        Please provide a Last Name\\n      </div>\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('lastName').touched &&\\n          editEmployeeForm.get('lastName').hasError('pattern')\\n          \\\">\\n        You must use alphabet characters only\\n      </div>\\n    </div>\\n    <!-- PID -->\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        maxlength=\\\"9\\\"\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n          editEmployeeForm.get('personalIdentity').errors &&\\n          editEmployeeForm.get('personalIdentity').touched\\n        }\\\"\\n        class=\\\"form-control\\\"\\n        formControlName=\\\"personalIdentity\\\"\\n        placeholder=\\\"PersonalIdentity...\\\"\\n        autocomplete=\\\"personalIdentity\\\"\\n      />\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('personalIdentity').touched &&\\n          editEmployeeForm.get('personalIdentity').hasError('required')\\n          \\\">\\n        Please provide a PersonalIdentity\\n      </div>\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('personalIdentity').touched &&\\n          editEmployeeForm.get('personalIdentity').hasError('minlength')\\n          \\\">\\n        ID must be 9 characters long\\n      </div>\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('personalIdentity').touched &&\\n          editEmployeeForm.get('personalIdentity').hasError('pattern')\\n          \\\">\\n        Please use numbers only\\n      </div>\\n    </div>\\n    <!-- ManagerSelection -->\\n    <div class=\\\"form-group\\\">\\n      <select\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n        editEmployeeForm.get('managerId').errors &&\\n        editEmployeeForm.get('managerId').touched\\n      }\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"managerId\\\"\\n      autocomplete=\\\"managerId\\\"\\n      >\\n        <option *ngFor=\\\"let manager of managers\\\" value=\\\"{{ manager.id }}\\\">{{ manager.firstName }} {{ manager.lastName }}</option>\\n      </select>\\n      <div class=\\\"invalid-feedback text-left\\\"\\n      *ngIf=\\\"\\n          editEmployeeForm.get('managerId').touched &&\\n          editEmployeeForm.get('managerId').hasError('required')\\n          \\\">\\n        Please provide a Manager for the Employee\\n      </div>\\n    </div>\\n    <!-- Buttons -->\\n    <div class=\\\"form-group text-center\\\">\\n      <button class=\\\"btn btn-outline-success mr-2\\\" type=\\\"submit\\\" [disabled]=\\\"!editEmployeeForm.valid\\\">Save</button>\\n      <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n        Cancel\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"col\\\">\\n      <div class=\\\"row table-responsive-lg\\\">\\n        <div class=\\\"form-group\\\">\\n            <h2>Managers</h2>\\n          <select\\n          class=\\\"form-control\\\"\\n          autocomplete=\\\"managerId\\\"\\n          (change)=\\\"loadEmployees($event.target.value)\\\" [(ngModel)]=\\\"managerIdSelector\\\"\\n          >\\n            <option *ngFor=\\\"let manager of managers\\\" value=\\\"{{ manager.id }}\\\">{{ manager.firstName }} {{ manager.lastName }}</option>\\n          </select>\\n          <div class=\\\"row mt-3\\\">\\n            <h1 class=\\\"col\\\">Employees List</h1>\\n          </div>\\n        </div>\\n        <table class=\\\"table w-100\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">FirstName</th>\\n              <th scope=\\\"col\\\">LastName</th>\\n              <th scope=\\\"col\\\">PID</th>\\n              <th scope=\\\"col\\\">Manager</th>\\n              <th scope=\\\"col\\\"></th>\\n            </tr>\\n          </thead>\\n          <tbody *ngFor=\\\"let employee of employees\\\">\\n            <tr>\\n              <td class=\\\"align-middle\\\">{{ employee.firstName }}</td>\\n              <td class=\\\"align-middle\\\">{{ employee.lastName }}</td>\\n              <td class=\\\"align-middle\\\">{{ employee.personalIdentity }}</td>\\n              <td class=\\\"align-middle text-danger\\\">{{ employee.manager.firstName }} {{ employee.manager.lastName }}</td>\\n              <td class=\\\"align-middle text-right\\\">\\n                <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/employees', employee.id]\\\" routerLinkActive=\\\"router-link-active\\\" >Edit</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n</div>\\n\"","export default \"<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <button class=\\\"btn btn-success mb-3\\\" [routerLink]=\\\"['/employees/create']\\\" routerLinkActive=\\\"router-link-active\\\" >New Employee</button>\\n    <form class=\\\"form-inline mb-3\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"searchEmployees()\\\" novalidate>\\n      <div class=\\\"\\\">\\n        <input [(ngModel)]=\\\"employeeParams.lastName\\\" name=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control col-10 mr-1\\\" placeholder=\\\"Search for an Employee\\\" aria-label=\\\"Search for an Employee\\\" aria-describedby=\\\"basic-addon2\\\">\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"submit\\\">Search</button>\\n      </div>\\n    </form>\\n    <div *ngFor=\\\"let employee of employees\\\">\\n      <span>{{ employee.firstName }} {{ employee.lastName }} - {{ employee.personalIdentity }} / {{ employee.manager.firstName }} {{ employee.manager.lastName }}</span>\\n    </div>\\n    <!--<app-managers-list></app-managers-list>-->\\n  </div\\n  >\\n  <div class=\\\"col-sm-6\\\">\\n    <app-employees-list></app-employees-list>\\n  </div>\\n</div>\\n\"","export default \"<p>\\n  managers-create works!\\n</p>\\n\"","export default \"\"","export default \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-success\\\">\\n  <div class=\\\"container\\\">\\n  <a class=\\\"navbar-brand pb-2\\\" [routerLink]=\\\"['/']\\\" >EmployeeManagement</a>\\n    <!-- <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/confessions']\\\" >Employees</a>\\n      </li>\\n    </ul> -->\\n  </div>\\n</nav>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { EmployeeService } from '../_services/employee.service';\r\nimport { Employee } from '../_models/employee';\r\n\r\n@Injectable()\r\nexport class EmployeeEditResolver implements Resolve<Employee> {\r\n  constructor(\r\n    private employeeService: EmployeeService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Employee> {\r\n    return this.employeeService.getSingleEmployee(route.params.employeeId).pipe(\r\n      catchError(err => {\r\n        console.log(err);\r\n        this.router.navigate(['/']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Employee } from '../_models/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  baseUrl = environment.API_URL;\n\n  constructor(private http: HttpClient) {}\n\n  getEmployees(employeeParams?): Observable<Employee[]> {\n    let params = new HttpParams();\n\n    if (employeeParams != null) {\n        params = params.append('firstName', employeeParams.firstName);\n        params = params.append('lastName', employeeParams.lastName);\n        params = params.append('personalIdentity', employeeParams.personalIdentity);\n    }\n\n    return this.http.get<Employee[]>(this.baseUrl + 'employees', { params });\n  }\n\n  getSingleEmployee(employeeId): Observable<Employee> {\n    return this.http.get<Employee>(this.baseUrl + 'employees/' + employeeId);\n  }\n\n  updateEmployee(employeeId: number, employee: Employee) {\n    return this.http.put(this.baseUrl + 'employees/' + employeeId, employee);\n  }\n\n  createEmployee(employee: Employee) {\n    return this.http.post(this.baseUrl + 'employees', employee);\n  }\n\n  getEmployeesByManagerId(managerId: number): Observable<Employee[]> {\n    return this.http.get<Employee[]>(this.baseUrl + 'employees/manager/' + managerId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Manager } from '../_models/manager';\nimport { Employee } from '../_models/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerService {\n  baseUrl = environment.API_URL;\n\n  constructor(private http: HttpClient) { }\n\n  getManagers(): Observable<Manager[]> {\n    return this.http.get<Manager[]>(this.baseUrl + 'managers');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'EmployeeManagement-SPA';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { appRoutes } from './routes';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { EmployeesCreateComponent } from './employees/employees-create/employees-create.component';\nimport { EmployeesListComponent } from './employees/employees-create/employees-list/employees-list.component';\nimport { ManagersCreateComponent } from './managers/managers-create/managers-create.component';\nimport { ManagersListComponent } from './managers/managers-create/managers-list/managers-list.component';\nimport { EmployeeService } from './_services/employee.service';\nimport { ManagerService } from './_services/manager.service';\nimport { EmployeesEditComponent } from './employees/employees-create/employees-edit/employees-edit.component';\nimport { EmployeeEditResolver } from './_resolvers/employee-edit.resolver';\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      EmployeesCreateComponent,\n      EmployeesListComponent,\n      EmployeesEditComponent,\n      ManagersCreateComponent,\n      ManagersListComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      NgbModule,\n      RouterModule.forRoot(appRoutes)\n   ],\n   providers: [\n     EmployeeService,\n     ManagerService,\n     EmployeeEditResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMtY3JlYXRlL2VtcGxveWVlcy1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/_services/employee.service';\nimport { Employee } from 'src/app/_models/employee';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Manager } from 'src/app/_models/manager';\nimport { ManagerService } from 'src/app/_services/manager.service';\n\n@Component({\n  selector: 'app-employees-create',\n  templateUrl: './employees-create.component.html',\n  styleUrls: ['./employees-create.component.css']\n})\nexport class EmployeesCreateComponent implements OnInit {\n  employee: Employee;\n  managers: Manager[];\n  createEmployeeForm: FormGroup;\n\n  constructor(private employeeService: EmployeeService, private router: Router,\n              private formBuilder: FormBuilder, private managerService: ManagerService) { }\n\n  ngOnInit() {\n    this.createForm();\n    this.getManagers();\n  }\n\n  getManagers() {\n    this.managerService.getManagers().subscribe((managers: Manager[]) => {\n      this.managers = managers;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  createEmployee() {\n    if (this.createEmployeeForm.valid) {\n      this.employee = Object.assign({}, this.createEmployeeForm.value);\n    }\n    this.employeeService.createEmployee(this.employee).subscribe(() => {\n      console.log('Employee has been created');\n    }, err => {\n      console.log('Employee creation failed');\n    }, () => {\n      this.router.navigate(['/']);\n    });\n  }\n\n  createForm() {\n    // Only Numbers Regex\n    const numericRegex = /^-?(0|[1-9]\\d*)?$/;\n    // Only Alphabet Regex\n    const alphabetRegex = /[a-zA-Z]+/;\n\n    this.createEmployeeForm = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.pattern(alphabetRegex)]],\n      lastName: ['', [Validators.required, Validators.pattern(alphabetRegex)]],\n      personalIdentity: ['', [Validators.required, Validators.minLength(9), Validators.pattern(numericRegex)]],\n      managerId: ['', Validators.required]\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['/']);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMtY3JlYXRlL2VtcGxveWVlcy1lZGl0L2VtcGxveWVlcy1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/_services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Employee } from 'src/app/_models/employee';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ManagerService } from 'src/app/_services/manager.service';\nimport { Manager } from 'src/app/_models/manager';\n\n@Component({\n  selector: 'app-employees-edit',\n  templateUrl: './employees-edit.component.html',\n  styleUrls: ['./employees-edit.component.css']\n})\nexport class EmployeesEditComponent implements OnInit {\n  employee: Employee;\n  managers: Manager[];\n  editEmployeeForm: FormGroup;\n\n  constructor(private employeeService: EmployeeService, private route: ActivatedRoute,\n              private formBuilder: FormBuilder, private router: Router,\n              private managerService: ManagerService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.employee = data.employee;\n    });\n    this.editForm();\n    this.getManagers();\n  }\n\n  updateEmployee() {\n    if (this.editEmployeeForm.valid) {\n      this.employee = Object.assign({}, this.editEmployeeForm.value);\n    }\n    console.log(this.employee);\n    this.employeeService.updateEmployee(this.route.snapshot.params.employeeId, this.employee).subscribe(next => {\n      console.log('Updated Employee successfully');\n    }, err => {\n      console.log(err);\n    }, () => {\n      this.router.navigate(['/']);\n    });\n  }\n\n  editForm() {\n    // Only Numbers Regex\n    const numericRegex = /^-?(0|[1-9]\\d*)?$/;\n    // Only Alphabet Regex\n    const alphabetRegex = /[a-zA-Z]+/;\n\n    this.editEmployeeForm = this.formBuilder.group({\n      firstName: [this.employee.firstName, [Validators.required, Validators.pattern(alphabetRegex)]],\n      lastName: [this.employee.lastName, [Validators.required, Validators.pattern(alphabetRegex)]],\n      personalIdentity: [this.employee.personalIdentity, [Validators.required, Validators.minLength(9), Validators.pattern(numericRegex)]],\n      managerId: [this.employee.managerId, Validators.required]\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['/']);\n  }\n\n  getManagers() {\n    this.managerService.getManagers().subscribe((managers: Manager[]) => {\n      this.managers = managers;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  /*\n  getSingleEmployee() {\n    this.employeeService.getSingleEmployee(+this.route.snapshot.params.employeeId).subscribe((employee: Employee) => {\n      this.employee = employee;\n    }, err => {\n      console.log(err);\n    });\n  }\n  */\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMtY3JlYXRlL2VtcGxveWVlcy1saXN0L2VtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from 'src/app/_models/employee';\nimport { EmployeeService } from 'src/app/_services/employee.service';\nimport { ManagerService } from 'src/app/_services/manager.service';\nimport { Manager } from 'src/app/_models/manager';\n\n@Component({\n  selector: 'app-employees-list',\n  templateUrl: './employees-list.component.html',\n  styleUrls: ['./employees-list.component.css']\n})\nexport class EmployeesListComponent implements OnInit {\n  employees: Employee[];\n  managers: Manager[];\n  managerIdSelector: number;\n\n  constructor(private employeeService: EmployeeService, private managerService: ManagerService) { }\n\n  ngOnInit() {\n    this.loadManagers();\n  }\n\n  loadEmployees() {\n    this.employeeService.getEmployeesByManagerId(this.managerIdSelector).subscribe((employees: Employee[]) => {\n      this.employees = employees;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  loadManagers() {\n    this.managerService.getManagers().subscribe((managers: Manager[]) => {\n      this.managers = managers;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  searchEmp() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../_services/employee.service';\nimport { Employee } from '../_models/employee';\nimport { HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  employees: Employee[];\n  employeeParams: any = {};\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n\n  }\n\n  searchEmployees() {\n    this.employeeService.getEmployees(this.employeeParams).subscribe((employees: Employee[]) => {\n      this.employees = employees;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXJzL21hbmFnZXJzLWNyZWF0ZS9tYW5hZ2Vycy1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-managers-create',\n  templateUrl: './managers-create.component.html',\n  styleUrls: ['./managers-create.component.css']\n})\nexport class ManagersCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXJzL21hbmFnZXJzLWNyZWF0ZS9tYW5hZ2Vycy1saXN0L21hbmFnZXJzLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Manager } from 'src/app/_models/manager';\nimport { ManagerService } from 'src/app/_services/manager.service';\n\n@Component({\n  selector: 'app-managers-list',\n  templateUrl: './managers-list.component.html',\n  styleUrls: ['./managers-list.component.css']\n})\nexport class ManagersListComponent implements OnInit {\n  managers: Manager[];\n\n  constructor(private managerService: ManagerService) { }\n\n  ngOnInit() {\n    this.loadManagers();\n  }\n\n  loadManagers() {\n    this.managerService.getManagers().subscribe((managers: Manager[]) => {\n      this.managers = managers;\n    }, err => {\n      console.log(err);\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { EmployeesCreateComponent } from './employees/employees-create/employees-create.component';\r\nimport { EmployeesEditComponent } from './employees/employees-create/employees-edit/employees-edit.component';\r\nimport { EmployeeEditResolver } from './_resolvers/employee-edit.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n  // Home Page Router\r\n  { path: '', component: HomeComponent },\r\n  // Employees Router\r\n  { path: 'employees/create', component: EmployeesCreateComponent },\r\n  { path: 'employees/:employeeId', component: EmployeesEditComponent, resolve: {employee: EmployeeEditResolver} },\r\n  // Managers Router\r\n  // Redirect to home page if href is incorrect\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'https://localhost:5001/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}